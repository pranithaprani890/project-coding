
1. DemoApplication.java
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {
    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}

2. NumberController.java
package com.example.demo.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/numbers")
public class NumberController {

    @GetMapping("/{num}")
    public ResponseEntity<String> checkMultipleOfFive(@PathVariable int num) {
        if (num % 5 == 0) {
            return ResponseEntity
                    .status(HttpStatus.OK)
                    .body("Yes, " + num + " is a multiple of 5");
        } else {
            return ResponseEntity
                    .status(HttpStatus.BAD_REQUEST)
                    .body("No, " + num + " is not a multiple of 5");
        }
    }
}


âœ… Run this with mvn spring-boot:run â†’ server will start on http://localhost:8080.

ðŸŸ¡ React Frontend

Letâ€™s make a simple component that lets the user enter a number, calls the API, and displays the result.

CheckNumber.js
import React, { useState } from "react";

export default function CheckNumber() {
  const [num, setNum] = useState("");
  const [message, setMessage] = useState("");
  const [status, setStatus] = useState(null);

  const checkNumber = async () => {
    if (!num) return;
    try {
      const response = await fetch(`http://localhost:8080/api/numbers/${num}`);
      const text = await response.text();
      setMessage(text);
      setStatus(response.status);
    } catch (err) {
      setMessage("Error connecting to server");
      setStatus(null);
    }
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h2>Check Multiple of 5</h2>
      <input
        type="number"
        value={num}
        onChange={(e) => setNum(e.target.value)}
        placeholder="Enter a number"
      />
      <button onClick={checkNumber} style={{ marginLeft: "10px" }}>
        Check
      </button>
      {message && (
        <p style={{ marginTop: "15px", color: status === 200 ? "green" : "red" }}>
          {message} (HTTP {status})
        </p>
      )}
    </div>
  );
}

Usage in React App

In your App.js:

import React from "react";
import CheckNumber from "./CheckNumber";

function App() {
  return (
    <div>
      <CheckNumber />
    </div>
  );
}


export default App;


















// src/services/numberService.js

const API_URL = "http://localhost:8080/api/numbers";

export async function checkMultipleOfFive(num) {
  try {
    const response = await fetch(`${API_URL}/${num}`);
    const text = await response.text();
    return {
      status: response.status,
      message: text
    };
  } catch (error) {
    return {
      status: null,
      message: "Error connecting to server"
    };
  }
}





// src/CheckNumber.js
import React, { useState } from "react";
import { checkMultipleOfFive } from "./services/numberService";

export default function CheckNumber() {
  const [num, setNum] = useState("");
  const [result, setResult] = useState(null);

  const handleCheck = async () => {
    if (!num) return;
    const res = await checkMultipleOfFive(num);
    setResult(res);
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h2>Check Multiple of 5</h2>
      <input
        type="number"
        value={num}
        onChange={(e) => setNum(e.target.value)}
        placeholder="Enter a number"
      />
      <button onClick={handleCheck} style={{ marginLeft: "10px" }}>
        Check
      </button>

      {result && (
        <p
          style={{
            marginTop: "15px",
            color: result.status === 200 ? "green" : "red"
          }}
        >
          {result.message} (HTTP {result.status})
        </p>
      )}
    </div>
  );
}




import React from "react";
import CheckNumber from "./CheckNumber";

function App() {
  return <CheckNumber />;
}

export default App;





























1. application.properties
spring.datasource.url=jdbc:postgresql://localhost:5432/locationsdb
spring.datasource.username=postgres
spring.datasource.password=yourpassword
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

2. Location.java
package com.example.demo.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name = "locations")
public class Location {

    @Id
    private Long pincode;   // Primary key
    private String city;
    private String area;

    public Location() {}

    public Location(Long pincode, String city, String area) {
        this.pincode = pincode;
        this.city = city;
        this.area = area;
    }

    public Long getPincode() { return pincode; }
    public void setPincode(Long pincode) { this.pincode = pincode; }

    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }

    public String getArea() { return area; }
    public void setArea(String area) { this.area = area; }
}

3. LocationRepository.java
package com.example.demo.repository;

import com.example.demo.entity.Location;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface LocationRepository extends JpaRepository<Location, Long> {
    List<Location> findByCityIgnoreCase(String city);
}

4. LocationService.java
package com.example.demo.service;

import com.example.demo.entity.Location;
import com.example.demo.repository.LocationRepository;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class LocationService {

    private final LocationRepository repo;

    public LocationService(LocationRepository repo) {
        this.repo = repo;
    }

    public Optional<Location> getLocationByPincode(Long pincode) {
        return repo.findById(pincode);
    }

    public List<Location> getPincodesByCity(String city) {
        return repo.findByCityIgnoreCase(city);
    }
}

5. LocationController.java
package com.example.demo.controller;

import com.example.demo.entity.Location;
import com.example.demo.service.LocationService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/locations")
@CrossOrigin(origins = "http://localhost:3000")
public class LocationController {

    private final LocationService service;

    public LocationController(LocationService service) {
        this.service = service;
    }

    // Get info about city, area, pincode by specifying pincode
    @GetMapping("/pincode/{pincode}")
    public ResponseEntity<?> getLocationByPincode(@PathVariable Long pincode) {
        return service.getLocationByPincode(pincode)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    // Get all pincodes associated with a city
    @GetMapping("/city/{city}")
    public ResponseEntity<List<Location>> getPincodesByCity(@PathVariable String city) {
        return ResponseEntity.ok(service.getPincodesByCity(city));
    }
}

ðŸŸ¡ React Frontend
Project Structure
react-location/
 â””â”€â”€ src/
     â”œâ”€â”€ services/locationService.js
     â”œâ”€â”€ LocationSearch.js
     â”œâ”€â”€ App.js
     â””â”€â”€ index.js

1. locationService.js
const API_URL = "http://localhost:8080/api/locations";

export async function getLocationByPincode(pincode) {
  const res = await fetch(`${API_URL}/pincode/${pincode}`);
  if (!res.ok) throw new Error("Pincode not found");
  return res.json();
}

export async function getPincodesByCity(city) {
  const res = await fetch(`${API_URL}/city/${city}`);
  if (!res.ok) throw new Error("City not found");
  return res.json();
}

2. LocationSearch.js
import React, { useState } from "react";
import { getLocationByPincode, getPincodesByCity } from "./services/locationService";

export default function LocationSearch() {
  const [pincode, setPincode] = useState("");
  const [city, setCity] = useState("");
  const [result, setResult] = useState(null);
  const [error, setError] = useState("");

  const searchByPincode = async () => {
    try {
      const data = await getLocationByPincode(pincode);
      setResult(data);
      setError("");
    } catch (err) {
      setError(err.message);
      setResult(null);
    }
  };

  const searchByCity = async () => {
    try {
      const data = await getPincodesByCity(city);
      setResult(data);
      setError("");
    } catch (err) {
      setError(err.message);
      setResult(null);
    }
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h2>Location Search</h2>

      <div>
        <input
          type="number"
          placeholder="Enter Pincode"
          value={pincode}
          onChange={(e) => setPincode(e.target.value)}
        />
        <button onClick={searchByPincode}>Search by Pincode</button>
      </div>

      <div style={{ marginTop: "15px" }}>
        <input
          type="text"
          placeholder="Enter City"
          value={city}
          onChange={(e) => setCity(e.target.value)}
        />
        <button onClick={searchByCity}>Search by City</button>
      </div>

      {error && <p style={{ color: "red" }}>{error}</p>}

      {result && (
        <pre style={{ marginTop: "20px", background: "#f4f4f4", padding: "10px" }}>
          {JSON.stringify(result, null, 2)}
        </pre>
      )}
    </div>
  );
}

3. App.js
import React from "react";
import LocationSearch from "./LocationSearch";

function App() {
  return (
    <div>
      <LocationSearch />
    </div>
  );
}

export default App;






// src/services/numberService.js
import axios from "axios";

const API_URL = "http://localhost:8080/api/numbers";

export async function checkMultipleOfFive(num) {
  try {
    const response = await axios.get(`${API_URL}/${num}`, {
      responseType: "text", // ensures backend text response is handled correctly
    });

    return {
      status: response.status,
      message: response.data,
    };
  } catch (error) {
    return {
      status: error.response ? error.response.status : null,
      message: error.response ? error.response.data : "Error connecting to server",
    };
  }
}

CREATE TABLE locations (
    pincode BIGINT PRIMARY KEY,
    city VARCHAR(100) NOT NULL,
    area VARCHAR(100) NOT NULL
);





















react router:



import axios from "axios";

const API_URL = "http://localhost:8080/api/customers";

class CustomerService {
  getCustomers() {
    return axios.get(API_URL);
  }

  getCustomerById(id) {
    return axios.get(`${API_URL}/${id}`);
  }

  createCustomer(customer) {
    return axios.post(API_URL, customer);
  }

  updateCustomer(id, customer) {
    return axios.put(`${API_URL}/${id}`, customer);
  }

  deleteCustomer(id) {
    return axios.delete(`${API_URL}/${id}`);
  }
}

export default new CustomerService();
ðŸ”¹ 2. components/Navbar.js
javascript
Copy
Edit
import React from "react";
import { Link } from "react-router-dom";

function Navbar() {
  return (
    <nav className="navbar navbar-dark bg-dark px-3">
      <span className="navbar-brand">TopGuns Bank</span>
      <div>
        <Link to="/" className="nav-link d-inline text-white">Home</Link>
        <Link to="/customers" className="nav-link d-inline text-white">Customers</Link>
        <Link to="/about" className="nav-link d-inline text-white">About</Link>
      </div>
    </nav>
  );
}

export default Navbar;
ðŸ”¹ 3. components/CustomersList.js
javascript
Copy
Edit
import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import CustomerService from "../services/CustomerService";

function CustomersList() {
  const [customers, setCustomers] = useState([]);

  useEffect(() => {
    CustomerService.getCustomers().then((res) => setCustomers(res.data));
  }, []);

  const deleteCustomer = (id) => {
    if (window.confirm("Are you sure you want to delete this customer?")) {
      CustomerService.deleteCustomer(id).then(() => {
        setCustomers(customers.filter((c) => c.id !== id));
      });
    }
  };

  return (
    <div className="container mt-3">
      <h2>Customers List</h2>
      <Link to="/customers/new" className="btn btn-primary mb-2">Create new customer</Link>
      <table className="table table-bordered">
        <thead>
          <tr>
            <th>Id</th><th>First Name</th><th>Last Name</th><th>Email</th><th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {customers.map((c) => (
            <tr key={c.id}>
              <td>{c.id}</td>
              <td>{c.firstName}</td>
              <td>{c.lastName}</td>
              <td>{c.email}</td>
              <td>
                <Link to={`/customers/${c.id}`} className="btn btn-info btn-sm">Show</Link>{" "}
                <Link to={`/customers/edit/${c.id}`} className="btn btn-warning btn-sm">Edit</Link>{" "}
                <button onClick={() => deleteCustomer(c.id)} className="btn btn-danger btn-sm">Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default CustomersList;
ðŸ”¹ 4. components/CustomerForm.js
javascript
Copy
Edit
import React, { useState, useEffect } from "react";
import { useNavigate, useParams, Link } from "react-router-dom";
import CustomerService from "../services/CustomerService";

function CustomerForm() {
  const [customer, setCustomer] = useState({ firstName: "", lastName: "", email: "", phone: "" });
  const { id } = useParams();
  const navigate = useNavigate();

  useEffect(() => {
    if (id) {
      CustomerService.getCustomerById(id).then((res) => setCustomer(res.data));
    }
  }, [id]);

  const handleChange = (e) => {
    setCustomer({ ...customer, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (id) {
      CustomerService.updateCustomer(id, customer).then(() => navigate("/customers"));
    } else {
      CustomerService.createCustomer(customer).then(() => navigate("/customers"));
    }
  };

  return (
    <div className="container mt-3">
      <h2>{id ? "Edit Customer" : "Add Customer"}</h2>
      <form onSubmit={handleSubmit}>
        <input className="form-control mb-2" name="firstName" placeholder="First Name" value={customer.firstName} onChange={handleChange} required />
        <input className="form-control mb-2" name="lastName" placeholder="Last Name" value={customer.lastName} onChange={handleChange} required />
        <input className="form-control mb-2" name="email" type="email" placeholder="Email" value={customer.email} onChange={handleChange} required />
        <input className="form-control mb-2" name="phone" placeholder="Phone" value={customer.phone} onChange={handleChange} />
        <button type="submit" className="btn btn-success">{id ? "Update" : "Create"} Customer</button>
        <Link to="/customers" className="btn btn-secondary ms-2">Cancel</Link>
      </form>
    </div>
  );
}

export default CustomerForm;
ðŸ”¹ 5. components/CustomerDetails.js
javascript
Copy
Edit
import React, { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";
import CustomerService from "../services/CustomerService";

function CustomerDetails() {
  const { id } = useParams();
  const [customer, setCustomer] = useState({});
  const [accounts, setAccounts] = useState([]);

  useEffect(() => {
    CustomerService.getCustomerById(id).then((res) => {
      setCustomer(res.data);
      setAccounts(res.data.accounts || []);
    });
  }, [id]);

  return (
    <div className="container mt-3">
      <Link to="/customers">Back to Customers List</Link>
      <h2>Customer Details</h2>
      <p><b>ID:</b> {customer.id}</p>
      <p><b>First Name:</b> {customer.firstName}</p>
      <p><b>Last Name:</b> {customer.lastName}</p>
      <p><b>Email:</b> {customer.email}</p>
      <p><b>Phone:</b> {customer.phone}</p>

      <h3>List of Accounts</h3>
      <table className="table table-bordered">
        <thead>
          <tr><th>Account No</th><th>Type</th><th>Branch</th><th>Balance</th></tr>
        </thead>
        <tbody>
          {accounts.map((a, idx) => (
            <tr key={idx}>
              <td>{a.accountNo}</td>
              <td>{a.type}</td>
              <td>{a.branch}</td>
              <td>{a.balance}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default CustomerDetails;
ðŸ”¹ 6. pages/Home.js
javascript
Copy
Edit
import React from "react";

function Home() {
  return (
    <div className="container mt-3">
      <h2>Welcome to TopGuns Bank</h2>
      <p>This is a demo banking app where admins can manage customers and their accounts.</p>
    </div>
  );
}

export default Home;
ðŸ”¹ 7. pages/About.js
javascript
Copy
Edit
import React from "react";

function About() {
  return (
    <div className="container mt-3">
      <h2>About</h2>
      <p>TopGuns Bank is committed to providing reliable banking services. This app helps admins manage customer data.</p>
    </div>
  );
}

export default About;
ðŸ”¹ 8. App.js
javascript
Copy
Edit
import React from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Navbar from "./components/Navbar";
import Home from "./pages/Home";
import About from "./pages/About";
import CustomersList from "./components/CustomersList";
import CustomerForm from "./components/CustomerForm";
import CustomerDetails from "./components/CustomerDetails";

function App() {
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
        <Route path="/customers" element={<CustomersList />} />
        <Route path="/customers/new" element={<CustomerForm />} />
        <Route path="/customers/edit/:id" element={<CustomerForm />} />
        <Route path="/customers/:id" element={<CustomerDetails />} />
      </Routes>
    </Router>
  );
}

export default App;
